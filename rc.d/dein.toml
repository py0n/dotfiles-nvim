# プラグインの削除はTOMLファイルからエントリを削除後,以下のコマンドを實行する
# call map(dein#check_clean(), "delete(v:val, 'rf')")
# call dein#recache_runtimepath()

# MatchTagAlways {{{
# https://github.com/Valloric/MatchTagAlways
# 対応するタグをハイライトする
[[plugins]]
repo  = 'Valloric/MatchTagAlways'
on_ft = ['html', 'jinja', 'xhtml', 'xml']
# }}}

# agit.vim {{{
[[plugins]]
repo   = 'cohama/agit.vim'
on_cmd = ['Agit', 'AgitFile']
# }}}

#[[plugins]]
#repo     = 'neoclide/coc.nvim'
#merge    = 0
#rev      = 'release'
#hook_add = 'call deinhook#coc#hookadd()'

[[plugins]]
repo     = 'Shougo/context_filetype.vim'
hook_add = 'call deinhook#context_filetype#hookadd()'

# ddc.vim {{{
# https://github.com/Shougo/ddc.vim
[[plugins]]
repo = 'Shougo/ddc.vim'
hook_add = 'call deinhook#ddc#hookadd()'

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'Shougo/ddc-nextword'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
# }}}

# ddu.vim {{{
# https://github.com/Shougo/ddu.vim
[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'

[[plugins]]
repo = 'Shougo/ddu-kind-file'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'

[[plugins]]
repo = 'Shougo/ddu-source-line'

[[plugins]]
repo = 'shun/ddu-source-rg'

[[plugins]]
repo = 'Shougo/ddu-ui-ff'

[[plugins]]
repo     = 'Shougo/ddu.vim'
hook_add = 'call deinhook#ddu#hookadd()'
# }}}

# dein.vim {{{
[[plugins]]
repo = 'Shougo/dein.vim'
# }}}

# denops.vim {{{
# https://github.com/vim-denops/denops.vim
[[plugins]]
repo = 'vim-denops/denops.vim'
# }}}

# denops-helloworld.vim {{{
# https://github.com/vim-denops/denops.vim
[[plugins]]
repo = 'vim-denops/denops-helloworld.vim'
# }}}

[[plugins]]
repo     = 'itchyny/lightline.vim'
hook_add = 'call deinhook#lightline#hookadd()'

# linediff.vim {{{
# https://github.com/AndrewRadev/linediff.vim
# http://deris.hatenablog.jp/entry/2013/12/15/235606
# (使用法)
# 1. 比較したい行をvisual modeで選択して `Linediff` を実行
# 2. 比較対象の行をvisual modeで選択した上で再度 `Linediff` を実行
[[plugins]]
repo   = 'AndrewRadev/linediff.vim'
on_cmd = ['Linediff', 'LinediffReset']
# }}}

[[plugins]]
repo             = 'scrooloose/syntastic'
lazy             = 1
on_func          = ['SyntasticStatuslineFlag']
hook_add         = 'call deinhook#syntastic#hookadd()'
hook_post_source = 'call deinhook#syntastic#hookpostsource()'

# tabular {{{
# https://github.com/godlygeek/tabular
[[plugins]]
repo      = 'godlygeek/tabular'
on_source = ['vim-markdown']
# }}}

[[plugins]]
repo     = 'h1mesuke/vim-alignta'
on_cmd   = ['Align', 'AlignTsp', 'Alignta']
hook_add = 'call deinhook#vim_alignta#hookadd()'

[[plugins]]
repo     = 'osyo-manga/vim-anzu'
on_map   = ['<Plug>(anzu-']
hook_add = 'call deinhook#vim_anzu#hookadd()'

[[plugins]]
repo     = 'altercation/vim-colors-solarized'
hook_add = 'call deinhook#vim_colors_solarized#hookadd()'

[[plugins]]
repo        = 'easymotion/vim-easymotion'
on_map      = ['/', '<Space>h', '<Space>j', '<Space>k', '<Space>l', '<Space>w', 's']
hook_source = 'call deinhook#vim_easymotion#hookadd()'

[[plugins]]
repo     = 'junegunn/vim-easy-align'
on_map   = ['<Plug>EasyAlign']

# vim-fugitive {{{
# https://github.com/lambdalisue/vim-gista
[[plugins]]
repo             = 'tpope/vim-fugitive'
on_cmd           = ['Gdiffsplit', 'Git', 'Git!', 'Gwrite', 'Gvdiffsplit']
on_func          = ['fugitive#head']
hook_post_source = '''
    " http://lambdalisue.hatenablog.com/entry/2014/07/01/203015
    doautoall fugitive BufNewFile
'''
# }}}

[[plugins]]
repo        = 'lambdalisue/vim-gista'
on_cmd      = ['Gista']
pre_func    = ['gista#']
hook_source = 'call deinhook#vim_gista#hookadd()'

[[plugins]]
repo             = 'airblade/vim-gitgutter'
lazy             = 1
on_func          = ['GitGutterGetHunkSummary']
hook_add         = 'call deinhook#vim_gitgutter#hookadd()'
hook_post_source = 'call deinhook#vim_gitgutter#hookpostsource()'

#[[plugins]]
#repo     = 'fatih/vim-go'
#on_ft    = ['go']
#hook_add = 'call deinhook#vim_go#hookadd()'
#
#[[plugins]]
#repo     = 'vim-jp/vim-go-extra'
#depends  = ['vimproc']
#if       = 0
#on_ft    = ['go']
#hook_add = 'call deinhook#vim_go_extra#hookadd()'

[[plugins]]
repo     = 'thinca/vim-localrc'
if       = '!has("win32unix")'
hook_add = 'call deinhook#vim_localrc#hookadd()'

[[plugins]]
repo     = 'plasticboy/vim-markdown'
depends  = ['tabular']
on_ft    = ['markdown']
hook_add = 'call deinhook#vim_markdown#hookadd()'

[[plugins]]
repo     = 'osyo-manga/vim-precious'
depends  = ['context_filetype.vim']
on_ft    = ['html', 'toml']
hook_add = 'call deinhook#vim_precious#hookadd()'

[[plugins]]
repo        = 'airblade/vim-rooter'
hook_source = 'call deinhook#vim_rooter#hookadd()'

# vim-surround {{{
[[plugins]]
repo = 'tpope/vim-surround'
# }}}

[[plugins]]
repo             = 'Shougo/vimproc'
host_post_update = 'call deinhook#vimproc#hookpostupdate()'

# vim-toml {{{
[[plugins]]
repo = 'cespare/vim-toml'
# }}}

#[[plugins]]
#repo        = 'gcmt/wildfire.vim'
#hook_source = 'call deinhook#wildfire#hookadd()'

# vim:set fileencoding=utf-8 fileformat=unix foldmethod=marker:
